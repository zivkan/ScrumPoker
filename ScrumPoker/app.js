!function(){"use strict";var o=angular.module("scrumPokerApp",["ngRoute","ui.bootstrap","scrumPokerControllers","templates"]);o.config(["$routeProvider",function(o){o.when("/",{templateUrl:"partials/lobby.html",controller:"lobby"}).when("/room/:roomId",{templateUrl:"partials/room.html",controller:"room"}).otherwise({redirectTo:"/"})}])}(),function(){"use strict";angular.module("scrumPokerControllers",["templates"])}(),function(){"use strict";angular.module("scrumPokerControllers").controller("connection",["$scope","$modalInstance","PokerServer",function(o,n,e){o.PokerServer=e;var t=function(o){return o===$.connection.connectionState.connecting?"connecting":o===$.connection.connectionState.reconnecting?"reconnecting":o===$.connection.connectionState.disconnected?"disconnected":o===$.connection.connectionState.connected?"connected":"unknown state"};o.connectionState=t($.connection.hub.state),$.connection.hub.stateChanged(function(n){o.connectionState=t(n.newState),o.$apply()})}])}(),function(){"use strict";angular.module("scrumPokerControllers").controller("lobby",["$scope","PokerServer","$location",function(o,n,e){o.rooms=null,n.Reconnect().then(function(){n.getRooms().then(function(n){o.rooms=n})}),o.CreateRoom=function(o){n.CreateRoom(o).then(function(o){null!==o&&e.path("/room/"+o)})},n.$on("roomAdded",function(n,e){o.$apply(function(){null!==o.rooms&&o.rooms.push(e)})}),n.$on("roomDeleted",function(n,e){for(var t=function(n){o.rooms.splice(n,1)},r=0;r<o.rooms.length;r++)if(o.rooms[r].Id===e){o.$apply(t(r));break}}),n.$on("roomUpdated",function(n,e){for(var t=0;t<o.rooms.length;t++)if(o.rooms[t].Id===e.Id){o.$apply(function(){o.rooms[t].Voters=e.Voters,o.rooms[t].Viewers=e.Viewers});break}})}])}(),function(){"use strict";angular.module("scrumPokerApp").factory("PokerServer",["$rootScope","$location","$modal","$q",function(o,n,e,t){var r=o.$new();r.Reconnect=function(){return t.when($.connection.hub.start())};var c=$.connection.lobbyHub;r.getRooms=function(){return t.when(c.server.getRooms())},c.client.roomAdded=function(o){r.$emit("roomAdded",o)},c.client.roomDeleted=function(o){r.$emit("roomDeleted",o)},c.client.roomChanged=function(o){r.$emit("roomUpdated",o)},r.currentRoom=null;var i=$.connection.roomHub;return i.client.roomUpdate=function(n){null!==r.currentRoom&&(r.currentRoom.Voters=n.Participants,r.currentRoom.Viewers=n.Viewers,r.currentRoom.average=n.Average,r.currentRoom.majority=n.MajorityVote,o.$apply())},r.CreateRoom=function(o){return t.when(c.server.createRoom(o))},r.JoinRoom=function(o){return t.when(i.server.joinRoom(o))},r.ChangeParticipation=function(o){return t.when(i.server.changeParticipation(o))},r.LeaveRoom=function(){return t.when(i.server.leaveRoom())},r.Bet=function(o){i.server.bet(o)},r.modalInstance=null,$.connection.hub.stateChanged(function(o){o.newState!==$.connection.connectionState.connected?null===r.modalInstance&&(r.modalInstance=e.open({templateUrl:"partials/connection.html",controller:"connection",backdrop:"static"})):null!==r.modalInstance&&(r.modalInstance.dismiss(),r.modalInstance=null)}),r}])}(),function(){"use strict";angular.module("scrumPokerControllers").controller("room",["$scope","PokerServer","$routeParams",function(o,n,e){o.server=n,o.roomId=e.roomId,o.participation="viewer",o.allowedBets=[0,1,2,3,5,8,13,21,34,55,89],n.Reconnect().then(function(){n.JoinRoom(o.roomId).then(function(o){n.currentRoom=o})}),o.$on("$destroy",function(){n.LeaveRoom()}),o.Bet=function(o){"-"===o&&(o=null),n.Bet(o)},o.setName=function(e){o.participation="changing",n.ChangeParticipation(e).then(function(){o.serverName=e,o.participation=null===e?"viewer":"voter"},function(){o.participation=null===e?"viewer":"voter"})}}])}();
//# sourceMappingURL=app.js.map